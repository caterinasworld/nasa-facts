{"version":3,"sources":["views/APOD.js","App.js","index.js"],"names":["url","process","APOD","useState","fact","setFact","isImage","setIsImage","isVideo","setIsVideo","error","setError","a","fetch","response","json","data","media_type","includes","console","useEffect","getFacts","message","className","title","src","alt","Date","date","toDateString","explanation","copyright","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAMMA,EAAG,sDADGC,4CAGG,SAASC,IACtB,MAAsBC,qBAAtB,mBAAKC,EAAL,KAAWC,EAAX,KACA,EAA4BF,oBAAS,GAArC,mBAAKG,EAAL,KAAcC,EAAd,KACA,EAA4BJ,oBAAS,GAArC,mBAAKK,EAAL,KAAcC,EAAd,KACA,EAAwBN,qBAAxB,mBAAKO,EAAL,KAAYC,EAAZ,KAJ6B,4CAM7B,8BAAAC,EAAA,+EAEyBC,MAAMb,GAF/B,cAEQc,EAFR,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIIX,EAAQW,GACgB,UAApBA,EAAKC,YAAwBV,GAAW,GACxCS,EAAKhB,IAAIkB,SAAS,YAAYT,GAAW,GANjD,kDAQIU,QAAQT,MAAR,MACAC,EAAS,EAAD,IATZ,2DAN6B,sBAuB7B,OAJAS,qBAAU,YAnBmB,mCAoB3BC,KACC,IAGD,qCACGX,GAAS,0CAAaA,EAAMY,WAC5BlB,GACC,qCACE,qBAAImB,UAAU,YAAd,yDACqCnB,EAAKoB,SAE1C,0BAASD,UAAU,UAAnB,UACGjB,GACC,wBAAQiB,UAAU,SAAlB,SACE,qBAAKE,IAAKrB,EAAKJ,IAAK0B,IAAKtB,EAAKoB,UAGjChB,GACC,8BACE,cAAC,IAAD,CAAae,UAAU,eAAevB,IAAKI,EAAKJ,QAGpD,0BAASuB,UAAU,cAAnB,UACE,wBAAOA,UAAU,YAAjB,UACG,IADH,gBAEM,IAAII,KAAKvB,EAAKwB,MAAMC,kBAE1B,mBAAGN,UAAU,cAAb,SAA4BnB,EAAK0B,cAChC1B,EAAK2B,WAAa,gDAAmB3B,EAAK2B,yBCpD1C,SAASC,IACtB,OACE,sBAAMT,UAAU,MAAhB,SACE,cAAC,EAAD,MCGNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee82938e.chunk.js","sourcesContent":["import './APOD.css';\n\nimport { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\n\nconst key = process.env.REACT_APP_APOD_API_KEY;\nconst url = `https://api.nasa.gov/planetary/apod?api_key=${key}`;\n\nexport default function APOD() {\n  let [fact, setFact] = useState();\n  let [isImage, setIsImage] = useState(false);\n  let [isVideo, setIsVideo] = useState(false);\n  let [error, setError] = useState();\n\n  async function getFacts() {\n    try {\n      let response = await fetch(url);\n      let data = await response.json();\n      setFact(data);\n      if (data.media_type === 'image') setIsImage(true);\n      if (data.url.includes('youtube')) setIsVideo(true);\n    } catch (error) {\n      console.error(error);\n      setError(error);\n    }\n  }\n\n  useEffect(() => {\n    getFacts();\n  }, []);\n\n  return (\n    <>\n      {error && <div>Error: {error.message}</div>}\n      {fact && (\n        <>\n          <h1 className='h1 center'>\n            ðŸŽ¥ Astronomy Picture of the Day - {fact.title}\n          </h1>\n          <section className='content'>\n            {isImage && (\n              <figure className='figure'>\n                <img src={fact.url} alt={fact.title} />\n              </figure>\n            )}\n            {isVideo && (\n              <div>\n                <ReactPlayer className='react-player' url={fact.url} />\n              </div>\n            )}\n            <section className='description'>\n              <small className='photoDate'>\n                {' '}\n                ðŸ“† {new Date(fact.date).toDateString()}\n              </small>\n              <p className='explanation'>{fact.explanation}</p>\n              {fact.copyright && <small>Copyright: {fact.copyright}</small>}\n            </section>\n          </section>\n        </>\n      )}\n    </>\n  );\n}\n","import './App.css';\n\nimport APOD from './views/APOD';\n\nexport default function App() {\n  return (\n    <main className='App'>\n      <APOD />\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nif (process.env.NODE_ENV !== 'production') {\n  const axe = require('@axe-core/react');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}